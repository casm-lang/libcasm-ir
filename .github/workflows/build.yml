#
#   Copyright (C) 2015-2022 CASM Organization <https://casm-lang.org>
#   All rights reserved.
#
#   Developed by: Philipp Paulweber et al.
#                 <https://github.com/casm-lang/libcasm-ir/graphs/contributors>
#
#   This file is part of libcasm-ir.
#
#   libcasm-ir is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   libcasm-ir is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with libcasm-ir. If not, see <http://www.gnu.org/licenses/>.
#
#   Additional permission under GNU GPL version 3 section 7
#
#   libcasm-ir is distributed under the terms of the GNU General Public License
#   with the following clarification and special exception: Linking libcasm-ir
#   statically or dynamically with other modules is making a combined work
#   based on libcasm-ir. Thus, the terms and conditions of the GNU General
#   Public License cover the whole combination. As a special exception,
#   the copyright holders of libcasm-ir give you permission to link libcasm-ir
#   with independent modules to produce an executable, regardless of the
#   license terms of these independent modules, and to copy and distribute
#   the resulting executable under terms of your choice, provided that you
#   also meet, for each linked independent module, the terms and conditions
#   of the license of that module. An independent module is a module which
#   is not derived from or based on libcasm-ir. If you modify libcasm-ir, you
#   may extend this exception to your version of the library, but you are
#   not obliged to do so. If you do not wish to do so, delete this exception
#   statement from your version.
#

# https://help.github.com/en/articles/virtual-environments-for-github-actions
# https://github.com/actions/virtual-environments/blob/main/images/linux
# https://github.com/actions/virtual-environments/blob/main/images/macos
# https://github.com/actions/virtual-environments/blob/main/images/win

name: build

on:
  - push

jobs:
  build:
    name: ${{ matrix.job.os }} (${{ matrix.job.vm }}, ${{ matrix.job.isa }}, ${{ matrix.job.tool }}, ${{ matrix.job.build }})
    runs-on: ${{ matrix.job.vm }}
    strategy:
      fail-fast: false
      matrix:
        job:
        - { vm: ubuntu-20.04, os: linux,   isa: x86_64, tool: clang, build: debug }
        - { vm: ubuntu-20.04, os: linux,   isa: x86_64, tool: gcc,   build: coverage }
        - { vm: ubuntu-20.04, os: linux,   isa: x86_64, tool: emcc,  build: debug }
        - { vm: macos-10.15,  os: darwin,  isa: x86_64, tool: gcc,   build: debug }
        - { vm: windows-2019, os: windows, isa: x86_64, tool: clang, build: debug }
    env:
      B: ${{ matrix.job.build }}
      C: ${{ matrix.job.tool }}
      #I: ${{ github.workspace }}/.attic/install
      G: ninja
      H: sccache
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          .attic/sccache/
        key: ${{ matrix.job.os }}-${{ matrix.job.isa }}-${{ matrix.job.tool }}-${{ matrix.job.build }}
    - name: Setup 'linux'
      if:   matrix.job.os == 'linux'
      env:
        SCCACHE_URL: https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
      run: |
        make info
        sudo apt-get update
        sudo apt-get install -y ninja-build
        wget -qO  /tmp/archive.tar.gz --no-check-certificate $SCCACHE_URL
        tar  -xf  /tmp/archive.tar.gz -C /tmp
        rm   -f   /tmp/archive.tar.gz
        sudo mv  /tmp/sccache-*/sccache /usr/local/bin/
        sudo chmod +x  /usr/local/bin/sccache
        make ci-tools
    - name: Setup 'darwin'
      if:   matrix.job.os == 'darwin'
      run: |
        make info
        brew install ninja
        brew install sccache
        make ci-tools
    - name: Setup 'windows'
      if:   matrix.job.os == 'windows'
      run: |
        make info
        echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        choco install ninja
        choco install sccache
        make ci-tools
    - name: Setup 'emcc'
      if:   matrix.job.tool == 'emcc'
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: 3.1.2
        actions-cache-folder: '.attic/emsdk'
    - name: Setup 'sccache'
      env:
        SCCACHE_DIR: ${{ github.workspace }}/.attic/sccache
        SCCACHE_MAX_FRAME_LENGTH: 104857600
      run: sccache --start-server && sccache --show-stats
    - name: Setup 'sccache'
      uses: webiny/action-post-run@2.0.1
      with:
        run: sccache --show-stats && sccache --stop-server
    - name: Fetching
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        make ci-fetch
    - name: Dependencies
      run: |
        make ci-deps
    - name: Building
      run: |
        make ci-build
    - name: Tests
      run: |
        make ci-test
    - name: Benchmark
      run: |
        make ci-benchmark
    - name: Coverage
      if: matrix.job.os == 'linux' && matrix.job.build == 'coverage'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        wget https://codecov.io/bash
        chmod 755 bash
        ./bash
